function makeLine(size) {
    // Function to create a line of hashes
    let line = '';
    for (let i = 0; i < size; i++) {
        line += '#';
    }
    return line;
}

function makeRectangle(width, height) {
    let rectangle = '';
    for (let i = 0; i < height; i++) {
        rectangle += makeLine(width) + '\n';
    }
    rectangle = rectangle.slice(0, -1);
    return rectangle;
}

function makeSquare(size) {
    return makeRectangle(size, size);
}


// console.log(makeRectangle(5, 3));
// console.log(makeSquare(5));



function makeDownwardStairs(height) {
    let stairs = '';
    for (let i = 0; i < height; i++) {
        stairs += (makeLine(i + 1) + '\n');
    }
    return stairs.slice(0, -1);
}

//console.log(makeDownwardStairs(5));



function makeSpaceLine(numSpaces, numChars) {
    let line = '';
    for (let i = 0; i < numSpaces; i++) {
        line += ' ';
    }
    for (let i = 0; i < numChars; i++) {
        line += '#';
    }
    for (let i = 0; i < numSpaces; i++) {
        line += ' ';
    }
    return line;
}

console.log(makeSpaceLine(3, 5));

function makeIsoscelesTriangle(height) {
    let triangle = '';
    for (let i = 0; i < height; i++) {
        triangle += (makeSpaceLine(height - i - 1, 2 * i + 1) + '\n');
    }
    return triangle.slice(0, -1);
}

console.log(makeIsoscelesTriangle(5));


function reverse(arr) {
    return arr.slice().reverse();
}

function makeDiamond(height) {
    let diamond = [];


    for (let i = 1; i <= height; i++) {
        let spaces = height - i;
        let chars = i * 2 - 1;
        diamond.push(makeSpaceLine(spaces, chars));
    }

    let downwardTriangle = reverse(diamond.slice(0, -1));


    diamond = diamond.concat(downwardTriangle);

    return diamond.join('\n');
}

console.log(makeDiamond(5));
